<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <bean id="routingService" class="org.firewaterframework.mappers.RouteMapper">
        <property name="urlMap" ref="urlMap"/>
    </bean>

    <bean id="urlMap" class="java.util.HashMap">
        <constructor-arg index="0">
            <map>
                <entry key="/users" value-ref="usersMapper"/>
                <entry key="/users/{userID}" value-ref="userMapper"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="usersMapper" class="org.firewaterframework.mappers.MethodMapper">
        <property name="getMapper" ref="usersGetMapper"/>
        <property name="putMapper" ref="usersPutMapper"/>
    </bean>

    <bean id="usersGetMapper" class="org.firewaterframework.mappers.jdbc.QueryMapper">
        <property name="query">
            <value>
                select  u.id as user, p.id as pet, p.name as pet_name, r.name as pet_type, u.first_name as first_name,
                u.last_name as last_name, u.email as email, u.city as city
                from user u
                left outer join pet p on u.id = p.owner_id 
                left outer join species r on p.species_id = r.id
                where
                    $if(species_list)$
                        p.species_id in ($species_list;separator=","$)
                    $else$
                        1 = 1
                    $endif$
                    and
                    $if(zipcode)$
                        u.zip = $zipcode$
                    $else$
                        1 = 1
                    $endif$
                order by
                    $if(sort)$
                        $sort$
                    $else$
                        email
                    $endif$,u.id
            </value>
        </property>
        <property name="dataSource" ref="dataSource"/>
        <property name="fields">
            <map>
                <entry key="sort">
                    <bean class="org.firewaterframework.mappers.validation.Pattern">
                        <property name="pattern" value="last_name|email"/>
                    </bean>
                </entry>
                <entry key="species_list">
                    <bean class="org.firewaterframework.mappers.validation.SQLLiteralList"/>
                </entry>
                <entry key="zipcode">
                    <bean class="org.firewaterframework.mappers.validation.SQLNumber"/>
                </entry>
            </map>
        </property>
        <property name="rowTreeMapper">
            <bean class="org.firewaterframework.mappers.jdbc.RowTreeBuilder">
                <property name="pivotColumn" value="user"/>
                <property name="pivotURLSelector" value="users"/>
                <property name="attributeColumnList">
                    <list>
                        <value>first_name</value>
                        <value>last_name</value>
                        <value>email</value>
                        <value>city</value>
                    </list>
                </property>
                <property name="subNodes">
                    <list>
                        <bean class="org.firewaterframework.mappers.jdbc.RowTreeBuilder">
                            <property name="pivotColumn" value="pet"/>
                            <property name="pivotURLSelector" value="pets"/>
                            <property name="attributeColumns">
                                <map>
                                    <entry key="pet_name" value="name"/>
                                    <entry key="pet_type" value="type"/>
                                </map>
                            </property>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="usersPutMapper" class="org.firewaterframework.mappers.jdbc.UpdateMapper" >
        <property name="dataSource" ref="dataSource"/>
        <property name="queries">
            <list>
                <value>
                    insert into user (first_name, last_name, email, city, state, password, zip)
                    values($first_name$, $last_name$, $email$, $city$, $state$, $password$, $zip$)
                </value>
            </list>
        </property>
        <property name="fields">
            <map>
                <entry key="first_name">
                    <bean class="org.firewaterframework.mappers.validation.SQLString"/>
                </entry>
                <entry key="last_name">
                    <bean class="org.firewaterframework.mappers.validation.SQLString"/>
                </entry>
                <entry key="city">
                    <bean class="org.firewaterframework.mappers.validation.SQLString"/>
                </entry>
                <entry key="state">
                    <bean class="org.firewaterframework.mappers.validation.Pattern">
                        <property name="pattern" value="[A-Z][A-Z]"/>
                        <property name="quote" value="true"/>
                    </bean>
                </entry>
                <entry key="email">
                    <bean class="org.firewaterframework.mappers.validation.SQLString"/>
                </entry>
                <entry key="password">
                    <bean class="org.firewaterframework.mappers.validation.SQLString"/>
                </entry>
                <entry key="zip">
                    <bean class="org.firewaterframework.mappers.validation.SQLNumber"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="userMapper" class="org.firewaterframework.mappers.MethodMapper">
        <property name="getMapper" ref="userGetMapper"/>
        <property name="postMapper" ref="userPostMapper"/>
    </bean>

    <bean id="userGetMapper" class="org.firewaterframework.mappers.jdbc.QueryMapper">
        <property name="query" value="
            select  u.id as user, u.first_name as first_name, u.last_name as last_name, u.email as email, u.city as city,
                u.state as state, u.zip zip
            from user u
            where u.id = $userID$"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="rowTreeMapper">
            <bean class="org.firewaterframework.mappers.jdbc.RowTreeBuilder">
                <property name="pivotColumn" value="user"/>
                <property name="pivotURLSelector" value="users"/>
                <property name="attributeColumnList">
                    <list>
                        <value>first_name</value>
                        <value>last_name</value>
                        <value>email</value>
                        <value>city</value>
                        <value>state</value>
                        <value>zip</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="userPostMapper" class="org.firewaterframework.mappers.jdbc.UpdateMapper" >
        <property name="dataSource" ref="dataSource"/>
        <property name="queries">
            <list>
                <value>
                    update user set (first_name, last_name, city, state, email, zip) =
                        ('$first_name$', '$last_name$', '$city$','$state$', '$email$', $zip$)
                    where id = $userID$
                </value>
            </list>
        </property>
    </bean>

    <!-- dev -->
    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:test"/>
    </bean>

    <tx:annotation-driven/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>